class Venue {
  String id; // Venue ID, generated by Firestore
  final String ownerId; // Reference to the user's ID
  final String name; // Venue name
  final String logoUrl; // URL to the venue's logo
  final String address; // Street address
  final String city; // City
  final String state; // State or region
  final String country; // Country
  final String zipCode; // Zip code or postal code
  final String phoneNumber; // Venue's contact number
  final String timezone; // Venue's timezone
  final String website; // Venue's website URL

  // Additional fields can be added later
  final bool isActive; // Whether the venue is active

  Venue({
    this.id = '',
    required this.ownerId,
    required this.name,
    this.logoUrl = '',
    this.address = '',
    this.city = '',
    this.state = '',
    this.country = '',
    this.zipCode = '',
    this.phoneNumber = '',
    this.timezone = '',
    this.website = '',
    this.isActive = true, // Default to active
  });

  // Convert a Venue object to a map
  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'ownerId': ownerId,
      'name': name,
      'logoUrl': logoUrl,
      'address': address,
      'city': city,
      'state': state,
      'country': country,
      'zipCode': zipCode,
      'phoneNumber': phoneNumber,
      'timezone': timezone,
      'website': website,
      'isActive': isActive,
    };
  }

  // Create a Venue object from a map
  factory Venue.fromMap(Map<String, dynamic> data, String documentId) {
    return Venue(
      id: documentId,
      ownerId: data['ownerId'],
      name: data['name'],
      logoUrl: data['logoUrl'] ?? '',
      address: data['address'] ?? '',
      city: data['city'] ?? '',
      state: data['state'] ?? '',
      country: data['country'] ?? '',
      zipCode: data['zipCode'] ?? '',
      phoneNumber: data['phoneNumber'] ?? '',
      timezone: data['timezone'] ?? '',
      website: data['website'] ?? '',
      isActive: data['isActive'] ?? true,
    );
  }
}
